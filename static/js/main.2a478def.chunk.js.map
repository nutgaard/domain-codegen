{"version":3,"sources":["parser.js","generators/generator.ts","generators/tscodegen.ts","generators/kotlincodegen.ts","application.tsx","index.tsx"],"names":["parser","peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Definitions","peg$parseDefinitions","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","definitions","filter","definition","peg$c3","peg$c4","peg$c5","identifier","fields","peg$c6","peg$c7","peg$c8","peg$c9","peg$classExpectation","peg$c10","comment","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","field","peg$c16","modifier","Object","objectSpread","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","primitive","generics","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","type1","type2","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","optional","mutable","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$otherExpectation","peg$c61","peg$c62","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","peg$buildStructuredError","s0","s1","s2","peg$parseDefinition","peg$parseComment","s3","s5","substr","peg$parse_","peg$parseIdentifier","s4","peg$parseField","peg$parseFields","test","charAt","peg$parseFieldIdentifier","peg$parseFieldModifier","peg$parseTypes","peg$parsePrimitiveType","peg$parseArrayType","s7","s9","peg$parseMapType","peg$parseReferenceType","generate","ast","generator","map","startDefine","processField","endDefine","concat","asFn","val","typemap","String","Long","Int","Short","Byte","Double","Float","Boolean","tstype","Map","TsCodegen","identity","kotlintype","KotlinCodegen","index","allFields","testcase","Application","_useField","initialValue","_useState","useState","_useState2","slicedToArray","value","setValue","e","target","useField","_useField2","setDefinition","error","undefined","generateAst","tsCode","kotlinCode","react_default","a","createElement","className","htmlFor","id","onChange","JSON","stringify","readOnly","ReactDOM","render","src_application","document","getElementById"],"mappings":"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","file":"static/js/main.2a478def.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n/* eslint-disable */\nexport default\n(function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { Definitions: peg$parseDefinitions },\n        peg$startRuleFunction  = peg$parseDefinitions,\n\n        peg$c0 = \"\\n\",\n        peg$c1 = peg$literalExpectation(\"\\n\", false),\n        peg$c2 = function(definitions) {\n          return definitions\n          \t.filter((definition) => definition && (typeof definition !== 'string'));\n        },\n        peg$c3 = \"define\",\n        peg$c4 = peg$literalExpectation(\"define\", false),\n        peg$c5 = function(identifier, fields) {\n          return {\n            identifier,\n            fields\n          };\n        },\n        peg$c6 = \"//\",\n        peg$c7 = peg$literalExpectation(\"//\", false),\n        peg$c8 = /^[^\\n]/,\n        peg$c9 = peg$classExpectation([\"\\n\"], true, false),\n        peg$c10 = function(comment) {\n          return null;\n        },\n        peg$c11 = \"{\",\n        peg$c12 = peg$literalExpectation(\"{\", false),\n        peg$c13 = \"}\",\n        peg$c14 = peg$literalExpectation(\"}\", false),\n        peg$c15 = function(fields) {\n          return fields.filter((field) => field);\n        },\n        peg$c16 = function(field, modifier, type) {\n          return { field, ...modifier, ...type }\n        },\n        peg$c17 = function(type) {\n          return type;\n        },\n        peg$c18 = \"Array<\",\n        peg$c19 = peg$literalExpectation(\"Array<\", false),\n        peg$c20 = \">\",\n        peg$c21 = peg$literalExpectation(\">\", false),\n        peg$c22 = function(type) {\n          return { primitive: true, type: \"Array\", generics: [ type ] }\n        },\n        peg$c23 = \"Map<\",\n        peg$c24 = peg$literalExpectation(\"Map<\", false),\n        peg$c25 = \",\",\n        peg$c26 = peg$literalExpectation(\",\", false),\n        peg$c27 = function(type1, type2) {\n          return { primitive: true, type: \"Map\", generics: [ type1, type2] }\n        },\n        peg$c28 = \"Long\",\n        peg$c29 = peg$literalExpectation(\"Long\", false),\n        peg$c30 = \"Int\",\n        peg$c31 = peg$literalExpectation(\"Int\", false),\n        peg$c32 = \"Short\",\n        peg$c33 = peg$literalExpectation(\"Short\", false),\n        peg$c34 = \"Byte\",\n        peg$c35 = peg$literalExpectation(\"Byte\", false),\n        peg$c36 = \"Double\",\n        peg$c37 = peg$literalExpectation(\"Double\", false),\n        peg$c38 = \"Float\",\n        peg$c39 = peg$literalExpectation(\"Float\", false),\n        peg$c40 = \"Boolean\",\n        peg$c41 = peg$literalExpectation(\"Boolean\", false),\n        peg$c42 = \"String\",\n        peg$c43 = peg$literalExpectation(\"String\", false),\n        peg$c44 = function() {\n          return { primitive: true, type: text(), generics: [] };\n        },\n        peg$c45 = function(identifier) {\n        \treturn { primitive: false, type: identifier, generics: [] }\n        },\n        peg$c46 = \"?\",\n        peg$c47 = peg$literalExpectation(\"?\", false),\n        peg$c48 = \"!\",\n        peg$c49 = peg$literalExpectation(\"!\", false),\n        peg$c50 = \":\",\n        peg$c51 = peg$literalExpectation(\":\", false),\n        peg$c52 = function(optional, mutable) {\n          return { optional: optional == \"?\", mutable: mutable == \"!\" };\n        },\n        peg$c53 = /^[_A-Za-z0-9]/,\n        peg$c54 = peg$classExpectation([\"_\", [\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n        peg$c55 = function() {\n          return text();\n        },\n        peg$c56 = /^[A-Z]/,\n        peg$c57 = peg$classExpectation([[\"A\", \"Z\"]], false, false),\n        peg$c58 = /^[a-z0-9]/,\n        peg$c59 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n        peg$c60 = peg$otherExpectation(\"whitespace\"),\n        peg$c61 = /^[ \\t\\n\\r]/,\n        peg$c62 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parseDefinitions() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseDefinition();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseComment();\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s2 = peg$c0;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseDefinition();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseComment();\n          if (s2 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n              s2 = peg$c0;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c1); }\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseDefinition() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c3) {\n        s1 = peg$c3;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c4); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIdentifier();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseFields();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseComment() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c6) {\n        s1 = peg$c6;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c7); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c8.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c9); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c8.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c9); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFields() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c11;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseField();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parseComment();\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseField();\n            if (s4 === peg$FAILED) {\n              s4 = peg$parseComment();\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s5 = peg$c13;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c14); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseField() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseFieldIdentifier();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseFieldModifier();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseTypes();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c16(s1, s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseTypes() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsePrimitiveType();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseArrayType();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseMapType();\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseReferenceType();\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c17(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseArrayType() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c18) {\n        s1 = peg$c18;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTypes();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s3 = peg$c20;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c21); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c22(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseMapType() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c23) {\n        s1 = peg$c23;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseTypes();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s5 = peg$c25;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c26); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseTypes();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parse_();\n                    if (s8 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 62) {\n                        s9 = peg$c20;\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n                      }\n                      if (s9 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c27(s3, s7);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsePrimitiveType() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c28) {\n        s1 = peg$c28;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c30) {\n          s1 = peg$c30;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c31); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c32) {\n            s1 = peg$c32;\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c33); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 4) === peg$c34) {\n              s1 = peg$c34;\n              peg$currPos += 4;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n            }\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 6) === peg$c36) {\n                s1 = peg$c36;\n                peg$currPos += 6;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c37); }\n              }\n              if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 5) === peg$c38) {\n                  s1 = peg$c38;\n                  peg$currPos += 5;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                }\n                if (s1 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 7) === peg$c40) {\n                    s1 = peg$c40;\n                    peg$currPos += 7;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                  }\n                  if (s1 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 6) === peg$c42) {\n                      s1 = peg$c42;\n                      peg$currPos += 6;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c44();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseReferenceType() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parseIdentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c45(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseFieldModifier() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 63) {\n        s1 = peg$c46;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c47); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s2 = peg$c48;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c49); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c50;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c51); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c52(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFieldIdentifier() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c53.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c54); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c53.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c54); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c55();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseIdentifier() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (peg$c56.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c57); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c58.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c59); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c58.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c59); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c55();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c61.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c62); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c61.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c62); }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c60); }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();\n","import { AST, OptionalField } from '../ast';\n\nexport interface Generator {\n    startDefine(identifier: string): string;\n    endDefine(): string;\n    processField(field: OptionalField, index: number, allFields: OptionalField[]): string;\n}\n\nexport default function generate(ast: AST, generator: Generator): string {\n    return ast\n        .map((definition) => {\n            const start = generator.startDefine(definition.identifier);\n            const fields = definition.fields\n                .map(generator.processField)\n                .join('\\n');\n            const end = generator.endDefine();\n\n            return `${start}${fields}${end}`;\n        })\n        .join('');\n}\n","import { Generator } from './generator'\nimport { Field, OptionalField } from '../ast';\n\nfunction asFn<S>(val: S | (() => S)): () => S {\n    if (typeof val === 'function') {\n        return val as (() => S);\n    }\n    return () => val;\n}\n\nconst typemap: { [key: string]: (s: any) => string } = {\n    String: asFn('string'),\n    Long: asFn('number'),\n    Int: asFn('number'),\n    Short: asFn('number'),\n    Byte: asFn('number'),\n    Double: asFn('number'),\n    Float: asFn('number'),\n    Boolean: asFn('boolean'),\n    Array: (field: Field) => `Array<${tstype(field.generics[0])}>`,\n    Map: (field: Field) => `{ [ key: ${tstype(field.generics[0])}]: ${tstype(field.generics[1])} }`\n};\n\nfunction tstype(field: Field): string {\n    if (!field.primitive) {\n        return field.type;\n    }\n\n    return typemap[field.type](field);\n}\n\n\nexport default class TsCodegen implements Generator {\n    startDefine(identifier: string): string {\n        return `export interface ${identifier} {\\n`;\n    }\n\n    endDefine(): string {\n        return '\\n}\\n\\n';\n    }\n\n    processField(field: OptionalField): string {\n        return `    ${field.mutable ? '' : 'readonly '}${field.field}${field.optional ? '?' : ''}: ${tstype(field)};`;\n    }\n}\n","import { Generator } from './generator'\nimport { Field, OptionalField } from '../ast';\n\nfunction identity(field: Field): string {\n    return field.type;\n}\n\nconst typemap: { [key: string]: (s: any) => string } = {\n    String: identity,\n    Long: identity,\n    Int: identity,\n    Short: identity,\n    Byte: identity,\n    Double: identity,\n    Float: identity,\n    Boolean: identity,\n    Array: (field: Field) => `List<${kotlintype(field.generics[0])}>`,\n    Map: (field: Field) => `Map<${kotlintype(field.generics[0])}, ${kotlintype(field.generics[1])}>`\n};\n\nfunction kotlintype(field: Field): string {\n    if (!field.primitive) {\n        return field.type;\n    }\n\n    return typemap[field.type](field);\n}\n\n\nexport default class KotlinCodegen implements Generator {\n    startDefine(identifier: string): string {\n        return `data class ${identifier}(\\n`;\n    }\n\n    endDefine(): string {\n        return '\\n)\\n\\n';\n    }\n\n    processField(field: OptionalField, index: number, allFields: OptionalField[]): string {\n        const isLast = index === allFields.length - 1;\n        return `    ${field.mutable ? 'var' : 'val'} ${field.field}: ${kotlintype(field)}${field.optional ? '?' : ''}${isLast ? '' : ''}`;\n    }\n}\n","import React, { useState } from 'react';\nimport './parser';\nimport './application.css';\nimport parser from './parser';\nimport { AST } from './ast';\nimport generate from './generators/generator';\nimport TsCodegen from './generators/tscodegen';\nimport KotlinCodegen from './generators/kotlincodegen';\n\nfunction useField<S extends string>(initialValue: S): [S, React.ChangeEventHandler<any>] {\n    const [value, setValue] = useState<S>(initialValue);\n    const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => setValue(e.target.value as S);\n\n    return [value, onChange];\n}\n\nfunction generateAst(value: string): { ast: AST, error?: string } {\n    try {\n        return { ast: parser.parse(value), error: undefined };\n    } catch (e) {\n        return { ast: [], error: e.message }\n    }\n}\n\nfunction generateCode(value: string) {\n    return value;\n}\n\nconst testcase = `define Kunde {\n  id?: String\n  navn!: String\n  kontoer: Array<Konto>\n  bekjente: Map<String, Kunde>\n}\n\ndefine Konto {\n  id: String\n  kroner: Int\n  ore: Int\n}`;\n\nfunction Application() {\n    const [definition, setDefinition] = useField(testcase);\n    const ast = generateAst(definition);\n    const tsCode = generate(ast.ast, new TsCodegen());\n    const kotlinCode = generate(ast.ast, new KotlinCodegen());\n\n    return (\n        <div className=\"application\">\n            <div className=\"editor\">\n                <div className=\"editor__textarea editor__definition\">\n                    <label htmlFor=\"definitiontxt\">Definition</label>\n                    <textarea id=\"definitiontxt\" value={definition} onChange={setDefinition}/>\n                </div>\n                <div className=\"editor__textarea editor__ast\">\n                    <label htmlFor=\"asttxt\">AST</label>\n                    <textarea id=\"asttxt\" value={JSON.stringify(ast.ast, null, 2)} readOnly/>\n                </div>\n                <div className=\"editor__textarea editor__code\">\n                    <label htmlFor=\"codetxt\">Code</label>\n                    <textarea id=\"codetxt\" value={tsCode} readOnly/>\n                </div>\n                <div className=\"editor__textarea editor__code\">\n                    <label htmlFor=\"codetxt\">Code</label>\n                    <textarea id=\"codetxt\" value={kotlinCode} readOnly/>\n                </div>\n            </div>\n            <div className=\"feedback\">\n                {ast.error}\n            </div>\n        </div>\n    );\n}\n\nexport default Application;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Application from './application';\n\nReactDOM.render(<Application />, document.getElementById('root'));\n"],"sourceRoot":""}