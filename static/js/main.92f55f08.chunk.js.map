{"version":3,"sources":["generators/generator.ts","generators/tscodegen.ts","generators/kotlincodegen.ts","parser.js","application.tsx","index.tsx"],"names":["generate","ast","generator","map","definition","start","startDefine","identifier","fields","processField","join","end","endDefine","concat","asFn","val","typemap","String","Long","Int","Short","Byte","Double","Float","Boolean","Array","field","tstype","generics","Map","primitive","type","TsCodegen","mutable","optional","identity","kotlintype","KotlinCodegen","index","allFields","length","parser","peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","i","escapedParts","parts","classEscape","inverted","any","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","sort","slice","describeExpected","describeFound","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Definitions","peg$parseDefinitions","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","definitions","filter","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$classExpectation","peg$c10","comment","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","mutability","nullable","Object","objectSpread","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","type1","type2","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$otherExpectation","peg$c64","peg$c65","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","push","peg$buildStructuredError","s0","s1","s2","peg$parseDefinition","peg$parseComment","s3","s5","substr","peg$parse_","peg$parseIdentifier","s4","peg$parseField","peg$parseFields","test","charAt","s7","s8","peg$parseFieldMutability","peg$parseFieldIdentifier","peg$parseTypes","peg$parseFieldNullability","peg$parsePrimitiveType","peg$parseArrayType","s9","peg$parseMapType","peg$parseReferenceType","testcase","Application","_useField","initialValue","_useState","useState","_useState2","slicedToArray","value","setValue","e","target","useField","_useField2","setDefinition","error","undefined","generateAst","tsCode","kotlinCode","react_default","a","createElement","className","htmlFor","id","onChange","JSON","stringify","readOnly","ReactDOM","render","src_application","document","getElementById"],"mappings":"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","file":"static/js/main.92f55f08.chunk.js","sourcesContent":["import { AST, OptionalField } from '../ast';\n\nexport interface Generator {\n    startDefine(identifier: string): string;\n    endDefine(): string;\n    processField(field: OptionalField, index: number, allFields: OptionalField[]): string;\n}\n\nexport default function generate(ast: AST, generator: Generator): string {\n    return ast\n        .map((definition) => {\n            const start = generator.startDefine(definition.identifier);\n            const fields = definition.fields\n                .map(generator.processField)\n                .join('\\n');\n            const end = generator.endDefine();\n\n            return `${start}${fields}${end}`;\n        })\n        .join('');\n}\n","import { Generator } from './generator'\nimport { Field, OptionalField } from '../ast';\n\nfunction asFn<S>(val: S | (() => S)): () => S {\n    if (typeof val === 'function') {\n        return val as (() => S);\n    }\n    return () => val;\n}\n\nconst typemap: { [key: string]: (s: any) => string } = {\n    String: asFn('string'),\n    Long: asFn('number'),\n    Int: asFn('number'),\n    Short: asFn('number'),\n    Byte: asFn('number'),\n    Double: asFn('number'),\n    Float: asFn('number'),\n    Boolean: asFn('boolean'),\n    Array: (field: Field) => `Array<${tstype(field.generics[0])}>`,\n    Map: (field: Field) => `{ [ key: ${tstype(field.generics[0])}]: ${tstype(field.generics[1])} }`\n};\n\nfunction tstype(field: Field): string {\n    if (!field.primitive) {\n        return field.type;\n    }\n\n    return typemap[field.type](field);\n}\n\n\nexport default class TsCodegen implements Generator {\n    startDefine(identifier: string): string {\n        return `export interface ${identifier} {\\n`;\n    }\n\n    endDefine(): string {\n        return '\\n}\\n\\n';\n    }\n\n    processField(field: OptionalField): string {\n        return `    ${field.mutable ? '' : 'readonly '}${field.field}${field.optional ? '?' : ''}: ${tstype(field)};`;\n    }\n}\n","import { Generator } from './generator'\nimport { Field, OptionalField } from '../ast';\n\nfunction identity(field: Field): string {\n    return field.type;\n}\n\nconst typemap: { [key: string]: (s: any) => string } = {\n    String: identity,\n    Long: identity,\n    Int: identity,\n    Short: identity,\n    Byte: identity,\n    Double: identity,\n    Float: identity,\n    Boolean: identity,\n    Array: (field: Field) => `List<${kotlintype(field.generics[0])}>`,\n    Map: (field: Field) => `Map<${kotlintype(field.generics[0])}, ${kotlintype(field.generics[1])}>`\n};\n\nfunction kotlintype(field: Field): string {\n    if (!field.primitive) {\n        return field.type;\n    }\n\n    return typemap[field.type](field);\n}\n\n\nexport default class KotlinCodegen implements Generator {\n    startDefine(identifier: string): string {\n        return `data class ${identifier}(\\n`;\n    }\n\n    endDefine(): string {\n        return '\\n)\\n\\n';\n    }\n\n    processField(field: OptionalField, index: number, allFields: OptionalField[]): string {\n        const isLast = index === allFields.length - 1;\n        return `    ${field.mutable ? 'var' : 'val'} ${field.field}: ${kotlintype(field)}${field.optional ? '?' : ''}${isLast ? '' : ''}`;\n    }\n}\n","export default /*\r\n * Generated by PEG.js 0.10.0.\r\n *\r\n * http://pegjs.org/\r\n */\r\n    (function() {\r\n      \"use strict\";\r\n\r\n      function peg$subclass(child, parent) {\r\n        function ctor() { this.constructor = child; }\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n      }\r\n\r\n      function peg$SyntaxError(message, expected, found, location) {\r\n        this.message  = message;\r\n        this.expected = expected;\r\n        this.found    = found;\r\n        this.location = location;\r\n        this.name     = \"SyntaxError\";\r\n\r\n        if (typeof Error.captureStackTrace === \"function\") {\r\n          Error.captureStackTrace(this, peg$SyntaxError);\r\n        }\r\n      }\r\n\r\n      peg$subclass(peg$SyntaxError, Error);\r\n\r\n      peg$SyntaxError.buildMessage = function(expected, found) {\r\n        var DESCRIBE_EXPECTATION_FNS = {\r\n          literal: function(expectation) {\r\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\r\n          },\r\n\r\n          \"class\": function(expectation) {\r\n            var escapedParts = \"\",\r\n                i;\r\n\r\n            for (i = 0; i < expectation.parts.length; i++) {\r\n              escapedParts += expectation.parts[i] instanceof Array\r\n                  ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\r\n                  : classEscape(expectation.parts[i]);\r\n            }\r\n\r\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\r\n          },\r\n\r\n          any: function(expectation) {\r\n            return \"any character\";\r\n          },\r\n\r\n          end: function(expectation) {\r\n            return \"end of input\";\r\n          },\r\n\r\n          other: function(expectation) {\r\n            return expectation.description;\r\n          }\r\n        };\r\n\r\n        function hex(ch) {\r\n          return ch.charCodeAt(0).toString(16).toUpperCase();\r\n        }\r\n\r\n        function literalEscape(s) {\r\n          return s\r\n              .replace(/\\\\/g, '\\\\\\\\')\r\n              .replace(/\"/g,  '\\\\\"')\r\n              .replace(/\\0/g, '\\\\0')\r\n              .replace(/\\t/g, '\\\\t')\r\n              .replace(/\\n/g, '\\\\n')\r\n              .replace(/\\r/g, '\\\\r')\r\n              .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\r\n              .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\r\n        }\r\n\r\n        function classEscape(s) {\r\n          return s\r\n              .replace(/\\\\/g, '\\\\\\\\')\r\n              .replace(/\\]/g, '\\\\]')\r\n              .replace(/\\^/g, '\\\\^')\r\n              .replace(/-/g,  '\\\\-')\r\n              .replace(/\\0/g, '\\\\0')\r\n              .replace(/\\t/g, '\\\\t')\r\n              .replace(/\\n/g, '\\\\n')\r\n              .replace(/\\r/g, '\\\\r')\r\n              .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\r\n              .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\r\n        }\r\n\r\n        function describeExpectation(expectation) {\r\n          return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\r\n        }\r\n\r\n        function describeExpected(expected) {\r\n          var descriptions = new Array(expected.length),\r\n              i, j;\r\n\r\n          for (i = 0; i < expected.length; i++) {\r\n            descriptions[i] = describeExpectation(expected[i]);\r\n          }\r\n\r\n          descriptions.sort();\r\n\r\n          if (descriptions.length > 0) {\r\n            for (i = 1, j = 1; i < descriptions.length; i++) {\r\n              if (descriptions[i - 1] !== descriptions[i]) {\r\n                descriptions[j] = descriptions[i];\r\n                j++;\r\n              }\r\n            }\r\n            descriptions.length = j;\r\n          }\r\n\r\n          switch (descriptions.length) {\r\n            case 1:\r\n              return descriptions[0];\r\n\r\n            case 2:\r\n              return descriptions[0] + \" or \" + descriptions[1];\r\n\r\n            default:\r\n              return descriptions.slice(0, -1).join(\", \")\r\n                  + \", or \"\r\n                  + descriptions[descriptions.length - 1];\r\n          }\r\n        }\r\n\r\n        function describeFound(found) {\r\n          return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\r\n        }\r\n\r\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\r\n      };\r\n\r\n      function peg$parse(input, options) {\r\n        options = options !== void 0 ? options : {};\r\n\r\n        var peg$FAILED = {},\r\n\r\n            peg$startRuleFunctions = { Definitions: peg$parseDefinitions },\r\n            peg$startRuleFunction  = peg$parseDefinitions,\r\n\r\n            peg$c0 = \"\\n\",\r\n            peg$c1 = peg$literalExpectation(\"\\n\", false),\r\n            peg$c2 = function(definitions) {\r\n              return definitions\r\n                  .filter((definition) => definition && (typeof definition !== 'string'));\r\n            },\r\n            peg$c3 = \"define\",\r\n            peg$c4 = peg$literalExpectation(\"define\", false),\r\n            peg$c5 = function(identifier, fields) {\r\n              return {\r\n                identifier,\r\n                fields\r\n              };\r\n            },\r\n            peg$c6 = \"//\",\r\n            peg$c7 = peg$literalExpectation(\"//\", false),\r\n            peg$c8 = /^[^\\n]/,\r\n            peg$c9 = peg$classExpectation([\"\\n\"], true, false),\r\n            peg$c10 = function(comment) {\r\n              return null;\r\n            },\r\n            peg$c11 = \"{\",\r\n            peg$c12 = peg$literalExpectation(\"{\", false),\r\n            peg$c13 = \"}\",\r\n            peg$c14 = peg$literalExpectation(\"}\", false),\r\n            peg$c15 = function(fields) {\r\n              return fields.filter((field) => field);\r\n            },\r\n            peg$c16 = \":\",\r\n            peg$c17 = peg$literalExpectation(\":\", false),\r\n            peg$c18 = function(mutability, field, type, nullable) {\r\n              return { field, ...type, ...mutability, ...nullable }\r\n            },\r\n            peg$c19 = function(type) {\r\n              return type;\r\n            },\r\n            peg$c20 = \"Array<\",\r\n            peg$c21 = peg$literalExpectation(\"Array<\", false),\r\n            peg$c22 = \">\",\r\n            peg$c23 = peg$literalExpectation(\">\", false),\r\n            peg$c24 = function(type) {\r\n              return { primitive: true, type: \"Array\", generics: [ type ] }\r\n            },\r\n            peg$c25 = \"Map<\",\r\n            peg$c26 = peg$literalExpectation(\"Map<\", false),\r\n            peg$c27 = \",\",\r\n            peg$c28 = peg$literalExpectation(\",\", false),\r\n            peg$c29 = function(type1, type2) {\r\n              return { primitive: true, type: \"Map\", generics: [ type1, type2] }\r\n            },\r\n            peg$c30 = \"Long\",\r\n            peg$c31 = peg$literalExpectation(\"Long\", false),\r\n            peg$c32 = \"Int\",\r\n            peg$c33 = peg$literalExpectation(\"Int\", false),\r\n            peg$c34 = \"Short\",\r\n            peg$c35 = peg$literalExpectation(\"Short\", false),\r\n            peg$c36 = \"Byte\",\r\n            peg$c37 = peg$literalExpectation(\"Byte\", false),\r\n            peg$c38 = \"Double\",\r\n            peg$c39 = peg$literalExpectation(\"Double\", false),\r\n            peg$c40 = \"Float\",\r\n            peg$c41 = peg$literalExpectation(\"Float\", false),\r\n            peg$c42 = \"Boolean\",\r\n            peg$c43 = peg$literalExpectation(\"Boolean\", false),\r\n            peg$c44 = \"String\",\r\n            peg$c45 = peg$literalExpectation(\"String\", false),\r\n            peg$c46 = function() {\r\n              return { primitive: true, type: text(), generics: [] };\r\n            },\r\n            peg$c47 = function(identifier) {\r\n              return { primitive: false, type: identifier, generics: [] }\r\n            },\r\n            peg$c48 = \"var\",\r\n            peg$c49 = peg$literalExpectation(\"var\", false),\r\n            peg$c50 = \"val\",\r\n            peg$c51 = peg$literalExpectation(\"val\", false),\r\n            peg$c52 = function() {\r\n              return { mutable: text() === \"var\" }\r\n            },\r\n            peg$c53 = \"?\",\r\n            peg$c54 = peg$literalExpectation(\"?\", false),\r\n            peg$c55 = function(nullable) {\r\n              return { nullable: nullable == \"?\" };\r\n            },\r\n            peg$c56 = /^[_A-Za-z0-9]/,\r\n            peg$c57 = peg$classExpectation([\"_\", [\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"]], false, false),\r\n            peg$c58 = function() {\r\n              return text();\r\n            },\r\n            peg$c59 = /^[A-Z]/,\r\n            peg$c60 = peg$classExpectation([[\"A\", \"Z\"]], false, false),\r\n            peg$c61 = /^[a-z0-9]/,\r\n            peg$c62 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\r\n            peg$c63 = peg$otherExpectation(\"whitespace\"),\r\n            peg$c64 = /^[ \\t\\n\\r]/,\r\n            peg$c65 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\r\n\r\n            peg$currPos          = 0,\r\n            peg$savedPos         = 0,\r\n            peg$posDetailsCache  = [{ line: 1, column: 1 }],\r\n            peg$maxFailPos       = 0,\r\n            peg$maxFailExpected  = [],\r\n            peg$silentFails      = 0,\r\n\r\n            peg$result;\r\n\r\n        if (\"startRule\" in options) {\r\n          if (!(options.startRule in peg$startRuleFunctions)) {\r\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\r\n          }\r\n\r\n          peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\r\n        }\r\n\r\n        function text() {\r\n          return input.substring(peg$savedPos, peg$currPos);\r\n        }\r\n\r\n        function location() {\r\n          return peg$computeLocation(peg$savedPos, peg$currPos);\r\n        }\r\n\r\n        function expected(description, location) {\r\n          location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\r\n\r\n          throw peg$buildStructuredError(\r\n              [peg$otherExpectation(description)],\r\n              input.substring(peg$savedPos, peg$currPos),\r\n              location\r\n          );\r\n        }\r\n\r\n        function error(message, location) {\r\n          location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\r\n\r\n          throw peg$buildSimpleError(message, location);\r\n        }\r\n\r\n        function peg$literalExpectation(text, ignoreCase) {\r\n          return { type: \"literal\", text: text, ignoreCase: ignoreCase };\r\n        }\r\n\r\n        function peg$classExpectation(parts, inverted, ignoreCase) {\r\n          return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\r\n        }\r\n\r\n        function peg$anyExpectation() {\r\n          return { type: \"any\" };\r\n        }\r\n\r\n        function peg$endExpectation() {\r\n          return { type: \"end\" };\r\n        }\r\n\r\n        function peg$otherExpectation(description) {\r\n          return { type: \"other\", description: description };\r\n        }\r\n\r\n        function peg$computePosDetails(pos) {\r\n          var details = peg$posDetailsCache[pos], p;\r\n\r\n          if (details) {\r\n            return details;\r\n          } else {\r\n            p = pos - 1;\r\n            while (!peg$posDetailsCache[p]) {\r\n              p--;\r\n            }\r\n\r\n            details = peg$posDetailsCache[p];\r\n            details = {\r\n              line:   details.line,\r\n              column: details.column\r\n            };\r\n\r\n            while (p < pos) {\r\n              if (input.charCodeAt(p) === 10) {\r\n                details.line++;\r\n                details.column = 1;\r\n              } else {\r\n                details.column++;\r\n              }\r\n\r\n              p++;\r\n            }\r\n\r\n            peg$posDetailsCache[pos] = details;\r\n            return details;\r\n          }\r\n        }\r\n\r\n        function peg$computeLocation(startPos, endPos) {\r\n          var startPosDetails = peg$computePosDetails(startPos),\r\n              endPosDetails   = peg$computePosDetails(endPos);\r\n\r\n          return {\r\n            start: {\r\n              offset: startPos,\r\n              line:   startPosDetails.line,\r\n              column: startPosDetails.column\r\n            },\r\n            end: {\r\n              offset: endPos,\r\n              line:   endPosDetails.line,\r\n              column: endPosDetails.column\r\n            }\r\n          };\r\n        }\r\n\r\n        function peg$fail(expected) {\r\n          if (peg$currPos < peg$maxFailPos) { return; }\r\n\r\n          if (peg$currPos > peg$maxFailPos) {\r\n            peg$maxFailPos = peg$currPos;\r\n            peg$maxFailExpected = [];\r\n          }\r\n\r\n          peg$maxFailExpected.push(expected);\r\n        }\r\n\r\n        function peg$buildSimpleError(message, location) {\r\n          return new peg$SyntaxError(message, null, null, location);\r\n        }\r\n\r\n        function peg$buildStructuredError(expected, found, location) {\r\n          return new peg$SyntaxError(\r\n              peg$SyntaxError.buildMessage(expected, found),\r\n              expected,\r\n              found,\r\n              location\r\n          );\r\n        }\r\n\r\n        function peg$parseDefinitions() {\r\n          var s0, s1, s2;\r\n\r\n          s0 = peg$currPos;\r\n          s1 = [];\r\n          s2 = peg$parseDefinition();\r\n          if (s2 === peg$FAILED) {\r\n            s2 = peg$parseComment();\r\n            if (s2 === peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 10) {\r\n                s2 = peg$c0;\r\n                peg$currPos++;\r\n              } else {\r\n                s2 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c1); }\r\n              }\r\n            }\r\n          }\r\n          while (s2 !== peg$FAILED) {\r\n            s1.push(s2);\r\n            s2 = peg$parseDefinition();\r\n            if (s2 === peg$FAILED) {\r\n              s2 = peg$parseComment();\r\n              if (s2 === peg$FAILED) {\r\n                if (input.charCodeAt(peg$currPos) === 10) {\r\n                  s2 = peg$c0;\r\n                  peg$currPos++;\r\n                } else {\r\n                  s2 = peg$FAILED;\r\n                  if (peg$silentFails === 0) { peg$fail(peg$c1); }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c2(s1);\r\n          }\r\n          s0 = s1;\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseDefinition() {\r\n          var s0, s1, s2, s3, s4, s5;\r\n\r\n          s0 = peg$currPos;\r\n          if (input.substr(peg$currPos, 6) === peg$c3) {\r\n            s1 = peg$c3;\r\n            peg$currPos += 6;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            s2 = peg$parse_();\r\n            if (s2 !== peg$FAILED) {\r\n              s3 = peg$parseIdentifier();\r\n              if (s3 !== peg$FAILED) {\r\n                s4 = peg$parse_();\r\n                if (s4 !== peg$FAILED) {\r\n                  s5 = peg$parseFields();\r\n                  if (s5 !== peg$FAILED) {\r\n                    peg$savedPos = s0;\r\n                    s1 = peg$c5(s3, s5);\r\n                    s0 = s1;\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$FAILED;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseComment() {\r\n          var s0, s1, s2, s3;\r\n\r\n          s0 = peg$currPos;\r\n          if (input.substr(peg$currPos, 2) === peg$c6) {\r\n            s1 = peg$c6;\r\n            peg$currPos += 2;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c7); }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            s2 = [];\r\n            if (peg$c8.test(input.charAt(peg$currPos))) {\r\n              s3 = input.charAt(peg$currPos);\r\n              peg$currPos++;\r\n            } else {\r\n              s3 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c9); }\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n              while (s3 !== peg$FAILED) {\r\n                s2.push(s3);\r\n                if (peg$c8.test(input.charAt(peg$currPos))) {\r\n                  s3 = input.charAt(peg$currPos);\r\n                  peg$currPos++;\r\n                } else {\r\n                  s3 = peg$FAILED;\r\n                  if (peg$silentFails === 0) { peg$fail(peg$c9); }\r\n                }\r\n              }\r\n            } else {\r\n              s2 = peg$FAILED;\r\n            }\r\n            if (s2 !== peg$FAILED) {\r\n              s3 = peg$parse_();\r\n              if (s3 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c10(s2);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseFields() {\r\n          var s0, s1, s2, s3, s4, s5;\r\n\r\n          s0 = peg$currPos;\r\n          if (input.charCodeAt(peg$currPos) === 123) {\r\n            s1 = peg$c11;\r\n            peg$currPos++;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            s2 = peg$parse_();\r\n            if (s2 !== peg$FAILED) {\r\n              s3 = [];\r\n              s4 = peg$parseField();\r\n              if (s4 === peg$FAILED) {\r\n                s4 = peg$parseComment();\r\n              }\r\n              while (s4 !== peg$FAILED) {\r\n                s3.push(s4);\r\n                s4 = peg$parseField();\r\n                if (s4 === peg$FAILED) {\r\n                  s4 = peg$parseComment();\r\n                }\r\n              }\r\n              if (s3 !== peg$FAILED) {\r\n                s4 = peg$parse_();\r\n                if (s4 !== peg$FAILED) {\r\n                  if (input.charCodeAt(peg$currPos) === 125) {\r\n                    s5 = peg$c13;\r\n                    peg$currPos++;\r\n                  } else {\r\n                    s5 = peg$FAILED;\r\n                    if (peg$silentFails === 0) { peg$fail(peg$c14); }\r\n                  }\r\n                  if (s5 !== peg$FAILED) {\r\n                    peg$savedPos = s0;\r\n                    s1 = peg$c15(s3);\r\n                    s0 = s1;\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$FAILED;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseField() {\r\n          var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\r\n\r\n          s0 = peg$currPos;\r\n          s1 = peg$parseFieldMutability();\r\n          if (s1 !== peg$FAILED) {\r\n            s2 = peg$parse_();\r\n            if (s2 !== peg$FAILED) {\r\n              s3 = peg$parseFieldIdentifier();\r\n              if (s3 !== peg$FAILED) {\r\n                s4 = peg$parse_();\r\n                if (s4 !== peg$FAILED) {\r\n                  if (input.charCodeAt(peg$currPos) === 58) {\r\n                    s5 = peg$c16;\r\n                    peg$currPos++;\r\n                  } else {\r\n                    s5 = peg$FAILED;\r\n                    if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n                  }\r\n                  if (s5 !== peg$FAILED) {\r\n                    s6 = peg$parse_();\r\n                    if (s6 !== peg$FAILED) {\r\n                      s7 = peg$parseTypes();\r\n                      if (s7 !== peg$FAILED) {\r\n                        s8 = peg$parseFieldNullability();\r\n                        if (s8 !== peg$FAILED) {\r\n                          s9 = peg$parse_();\r\n                          if (s9 !== peg$FAILED) {\r\n                            peg$savedPos = s0;\r\n                            s1 = peg$c18(s1, s3, s7, s8);\r\n                            s0 = s1;\r\n                          } else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                          }\r\n                        } else {\r\n                          peg$currPos = s0;\r\n                          s0 = peg$FAILED;\r\n                        }\r\n                      } else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s0;\r\n                      s0 = peg$FAILED;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$FAILED;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseTypes() {\r\n          var s0, s1;\r\n\r\n          s0 = peg$currPos;\r\n          s1 = peg$parsePrimitiveType();\r\n          if (s1 === peg$FAILED) {\r\n            s1 = peg$parseArrayType();\r\n            if (s1 === peg$FAILED) {\r\n              s1 = peg$parseMapType();\r\n              if (s1 === peg$FAILED) {\r\n                s1 = peg$parseReferenceType();\r\n              }\r\n            }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c19(s1);\r\n          }\r\n          s0 = s1;\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseArrayType() {\r\n          var s0, s1, s2, s3;\r\n\r\n          s0 = peg$currPos;\r\n          if (input.substr(peg$currPos, 6) === peg$c20) {\r\n            s1 = peg$c20;\r\n            peg$currPos += 6;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c21); }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            s2 = peg$parseTypes();\r\n            if (s2 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 62) {\r\n                s3 = peg$c22;\r\n                peg$currPos++;\r\n              } else {\r\n                s3 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\r\n              }\r\n              if (s3 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c24(s2);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseMapType() {\r\n          var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\r\n\r\n          s0 = peg$currPos;\r\n          if (input.substr(peg$currPos, 4) === peg$c25) {\r\n            s1 = peg$c25;\r\n            peg$currPos += 4;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c26); }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            s2 = peg$parse_();\r\n            if (s2 !== peg$FAILED) {\r\n              s3 = peg$parseTypes();\r\n              if (s3 !== peg$FAILED) {\r\n                s4 = peg$parse_();\r\n                if (s4 !== peg$FAILED) {\r\n                  if (input.charCodeAt(peg$currPos) === 44) {\r\n                    s5 = peg$c27;\r\n                    peg$currPos++;\r\n                  } else {\r\n                    s5 = peg$FAILED;\r\n                    if (peg$silentFails === 0) { peg$fail(peg$c28); }\r\n                  }\r\n                  if (s5 !== peg$FAILED) {\r\n                    s6 = peg$parse_();\r\n                    if (s6 !== peg$FAILED) {\r\n                      s7 = peg$parseTypes();\r\n                      if (s7 !== peg$FAILED) {\r\n                        s8 = peg$parse_();\r\n                        if (s8 !== peg$FAILED) {\r\n                          if (input.charCodeAt(peg$currPos) === 62) {\r\n                            s9 = peg$c22;\r\n                            peg$currPos++;\r\n                          } else {\r\n                            s9 = peg$FAILED;\r\n                            if (peg$silentFails === 0) { peg$fail(peg$c23); }\r\n                          }\r\n                          if (s9 !== peg$FAILED) {\r\n                            peg$savedPos = s0;\r\n                            s1 = peg$c29(s3, s7);\r\n                            s0 = s1;\r\n                          } else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                          }\r\n                        } else {\r\n                          peg$currPos = s0;\r\n                          s0 = peg$FAILED;\r\n                        }\r\n                      } else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s0;\r\n                      s0 = peg$FAILED;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$FAILED;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parsePrimitiveType() {\r\n          var s0, s1;\r\n\r\n          s0 = peg$currPos;\r\n          if (input.substr(peg$currPos, 4) === peg$c30) {\r\n            s1 = peg$c30;\r\n            peg$currPos += 4;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c31); }\r\n          }\r\n          if (s1 === peg$FAILED) {\r\n            if (input.substr(peg$currPos, 3) === peg$c32) {\r\n              s1 = peg$c32;\r\n              peg$currPos += 3;\r\n            } else {\r\n              s1 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c33); }\r\n            }\r\n            if (s1 === peg$FAILED) {\r\n              if (input.substr(peg$currPos, 5) === peg$c34) {\r\n                s1 = peg$c34;\r\n                peg$currPos += 5;\r\n              } else {\r\n                s1 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c35); }\r\n              }\r\n              if (s1 === peg$FAILED) {\r\n                if (input.substr(peg$currPos, 4) === peg$c36) {\r\n                  s1 = peg$c36;\r\n                  peg$currPos += 4;\r\n                } else {\r\n                  s1 = peg$FAILED;\r\n                  if (peg$silentFails === 0) { peg$fail(peg$c37); }\r\n                }\r\n                if (s1 === peg$FAILED) {\r\n                  if (input.substr(peg$currPos, 6) === peg$c38) {\r\n                    s1 = peg$c38;\r\n                    peg$currPos += 6;\r\n                  } else {\r\n                    s1 = peg$FAILED;\r\n                    if (peg$silentFails === 0) { peg$fail(peg$c39); }\r\n                  }\r\n                  if (s1 === peg$FAILED) {\r\n                    if (input.substr(peg$currPos, 5) === peg$c40) {\r\n                      s1 = peg$c40;\r\n                      peg$currPos += 5;\r\n                    } else {\r\n                      s1 = peg$FAILED;\r\n                      if (peg$silentFails === 0) { peg$fail(peg$c41); }\r\n                    }\r\n                    if (s1 === peg$FAILED) {\r\n                      if (input.substr(peg$currPos, 7) === peg$c42) {\r\n                        s1 = peg$c42;\r\n                        peg$currPos += 7;\r\n                      } else {\r\n                        s1 = peg$FAILED;\r\n                        if (peg$silentFails === 0) { peg$fail(peg$c43); }\r\n                      }\r\n                      if (s1 === peg$FAILED) {\r\n                        if (input.substr(peg$currPos, 6) === peg$c44) {\r\n                          s1 = peg$c44;\r\n                          peg$currPos += 6;\r\n                        } else {\r\n                          s1 = peg$FAILED;\r\n                          if (peg$silentFails === 0) { peg$fail(peg$c45); }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c46();\r\n          }\r\n          s0 = s1;\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseReferenceType() {\r\n          var s0, s1;\r\n\r\n          s0 = peg$currPos;\r\n          s1 = peg$parseIdentifier();\r\n          if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c47(s1);\r\n          }\r\n          s0 = s1;\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseFieldMutability() {\r\n          var s0, s1;\r\n\r\n          s0 = peg$currPos;\r\n          if (input.substr(peg$currPos, 3) === peg$c48) {\r\n            s1 = peg$c48;\r\n            peg$currPos += 3;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c49); }\r\n          }\r\n          if (s1 === peg$FAILED) {\r\n            if (input.substr(peg$currPos, 3) === peg$c50) {\r\n              s1 = peg$c50;\r\n              peg$currPos += 3;\r\n            } else {\r\n              s1 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c51); }\r\n            }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c52();\r\n          }\r\n          s0 = s1;\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseFieldNullability() {\r\n          var s0, s1;\r\n\r\n          s0 = peg$currPos;\r\n          if (input.charCodeAt(peg$currPos) === 63) {\r\n            s1 = peg$c53;\r\n            peg$currPos++;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c54); }\r\n          }\r\n          if (s1 === peg$FAILED) {\r\n            s1 = null;\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c55(s1);\r\n          }\r\n          s0 = s1;\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseFieldIdentifier() {\r\n          var s0, s1, s2;\r\n\r\n          s0 = peg$currPos;\r\n          s1 = [];\r\n          if (peg$c56.test(input.charAt(peg$currPos))) {\r\n            s2 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c57); }\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            while (s2 !== peg$FAILED) {\r\n              s1.push(s2);\r\n              if (peg$c56.test(input.charAt(peg$currPos))) {\r\n                s2 = input.charAt(peg$currPos);\r\n                peg$currPos++;\r\n              } else {\r\n                s2 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c57); }\r\n              }\r\n            }\r\n          } else {\r\n            s1 = peg$FAILED;\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c58();\r\n          }\r\n          s0 = s1;\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parseIdentifier() {\r\n          var s0, s1, s2, s3;\r\n\r\n          s0 = peg$currPos;\r\n          if (peg$c59.test(input.charAt(peg$currPos))) {\r\n            s1 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            s2 = [];\r\n            if (peg$c61.test(input.charAt(peg$currPos))) {\r\n              s3 = input.charAt(peg$currPos);\r\n              peg$currPos++;\r\n            } else {\r\n              s3 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c62); }\r\n            }\r\n            while (s3 !== peg$FAILED) {\r\n              s2.push(s3);\r\n              if (peg$c61.test(input.charAt(peg$currPos))) {\r\n                s3 = input.charAt(peg$currPos);\r\n                peg$currPos++;\r\n              } else {\r\n                s3 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c62); }\r\n              }\r\n            }\r\n            if (s2 !== peg$FAILED) {\r\n              peg$savedPos = s0;\r\n              s1 = peg$c58();\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n\r\n          return s0;\r\n        }\r\n\r\n        function peg$parse_() {\r\n          var s0, s1;\r\n\r\n          peg$silentFails++;\r\n          s0 = [];\r\n          if (peg$c64.test(input.charAt(peg$currPos))) {\r\n            s1 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c65); }\r\n          }\r\n          while (s1 !== peg$FAILED) {\r\n            s0.push(s1);\r\n            if (peg$c64.test(input.charAt(peg$currPos))) {\r\n              s1 = input.charAt(peg$currPos);\r\n              peg$currPos++;\r\n            } else {\r\n              s1 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c65); }\r\n            }\r\n          }\r\n          peg$silentFails--;\r\n          if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c63); }\r\n          }\r\n\r\n          return s0;\r\n        }\r\n\r\n        peg$result = peg$startRuleFunction();\r\n\r\n        if (peg$result !== peg$FAILED && peg$currPos === input.length) {\r\n          return peg$result;\r\n        } else {\r\n          if (peg$result !== peg$FAILED && peg$currPos < input.length) {\r\n            peg$fail(peg$endExpectation());\r\n          }\r\n\r\n          throw peg$buildStructuredError(\r\n              peg$maxFailExpected,\r\n              peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\r\n              peg$maxFailPos < input.length\r\n                  ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\r\n                  : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\r\n          );\r\n        }\r\n      }\r\n\r\n      return {\r\n        SyntaxError: peg$SyntaxError,\r\n        parse:       peg$parse\r\n      };\r\n    })();\r\n","import React, { useState } from 'react';\nimport { AST } from './ast';\nimport generate from './generators/generator';\nimport TsCodegen from './generators/tscodegen';\nimport KotlinCodegen from './generators/kotlincodegen';\nimport parser from './parser';\nimport './application.css';\n\nfunction useField<S extends string>(initialValue: S): [S, React.ChangeEventHandler<any>] {\n    const [value, setValue] = useState<S>(initialValue);\n    const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => setValue(e.target.value as S);\n\n    return [value, onChange];\n}\n\nfunction generateAst(value: string): { ast: AST, error?: string } {\n    try {\n        return { ast: parser.parse(value), error: undefined };\n    } catch (e) {\n        return { ast: [], error: e.message }\n    }\n}\n\nfunction generateCode(value: string) {\n    return value;\n}\n\nconst testcase = `define Deep {\n  var maps: Map<Int, Map<Int, Map<Int, Deep>>>\n  var lists: Array<Array<Array<Deep>>>\n}\n\ndefine Kunde {\n  val id: String?\n  val navn: String\n  var kontoer: Array<Konto>?\n  val bekjente: Map<String, Kunde>\n}\n\ndefine Konto {\n  val id: String\n  val kroner: Int\n  val ore: Int\n}`;\n\nfunction Application() {\n    const [definition, setDefinition] = useField(testcase);\n    const ast = generateAst(definition);\n    const tsCode = generate(ast.ast, new TsCodegen());\n    const kotlinCode = generate(ast.ast, new KotlinCodegen());\n\n    return (\n        <div className=\"application\">\n            <div className=\"editor\">\n                <div className=\"editor__textarea editor__definition\">\n                    <label htmlFor=\"definitiontxt\">Definition</label>\n                    <textarea id=\"definitiontxt\" value={definition} onChange={setDefinition}/>\n                </div>\n                <div className=\"editor__textarea editor__ast\">\n                    <label htmlFor=\"asttxt\">AST</label>\n                    <textarea id=\"asttxt\" value={JSON.stringify(ast.ast, null, 2)} readOnly/>\n                </div>\n                <div className=\"editor__textarea editor__code\">\n                    <label htmlFor=\"codetxt\">Code</label>\n                    <textarea id=\"codetxt\" value={tsCode} readOnly/>\n                </div>\n                <div className=\"editor__textarea editor__code\">\n                    <label htmlFor=\"codetxt\">Code</label>\n                    <textarea id=\"codetxt\" value={kotlinCode} readOnly/>\n                </div>\n            </div>\n            <div className=\"feedback\">\n                {ast.error}\n            </div>\n        </div>\n    );\n}\n\nexport default Application;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Application from './application';\n\nReactDOM.render(<Application />, document.getElementById('root'));\n"],"sourceRoot":""}